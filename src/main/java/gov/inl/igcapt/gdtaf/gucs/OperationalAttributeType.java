//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.02.02 at 09:17:37 AM MST 
//


package gov.inl.igcapt.gdtaf.gucs;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for OperationalAttributeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="OperationalAttributeType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="PAP02_BASELOAD"/&gt;
 *     &lt;enumeration value="PAP02_HIGHLOAD"/&gt;
 *     &lt;enumeration value="RELIABILITY"/&gt;
 *     &lt;enumeration value="APPLICATION_LATENCY"/&gt;
 *     &lt;enumeration value="WHEN"/&gt;
 *     &lt;enumeration value="DURABILITY"/&gt;
 *     &lt;enumeration value="HOW_OFTEN"/&gt;
 *     &lt;enumeration value="CAN_UNICAST"/&gt;
 *     &lt;enumeration value="CAN_MULTICAST"/&gt;
 *     &lt;enumeration value="CAN_ANYCAST"/&gt;
 *     &lt;enumeration value="CAN_BROADCAST"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "OperationalAttributeType")
@XmlEnum
public enum OperationalAttributeType {

    @XmlEnumValue("PAP02_BASELOAD")
    PAP_02_BASELOAD("PAP02_BASELOAD"),
    @XmlEnumValue("PAP02_HIGHLOAD")
    PAP_02_HIGHLOAD("PAP02_HIGHLOAD"),
    RELIABILITY("RELIABILITY"),
    APPLICATION_LATENCY("APPLICATION_LATENCY"),
    WHEN("WHEN"),
    DURABILITY("DURABILITY"),
    HOW_OFTEN("HOW_OFTEN"),
    CAN_UNICAST("CAN_UNICAST"),
    CAN_MULTICAST("CAN_MULTICAST"),
    CAN_ANYCAST("CAN_ANYCAST"),
    CAN_BROADCAST("CAN_BROADCAST");
    private final String value;

    OperationalAttributeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OperationalAttributeType fromValue(String v) {
        for (OperationalAttributeType c: OperationalAttributeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
